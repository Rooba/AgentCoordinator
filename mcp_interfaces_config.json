{
  "config": {
    "auto_restart_delay": 1000,
    "heartbeat_interval": 10000,
    "max_restart_attempts": 3,
    "startup_timeout": 30000
  },
  "interfaces": {
    "enabled_interfaces": ["stdio"],
    "stdio": {
      "enabled": true,
      "handle_stdio": true,
      "description": "Local MCP interface for VSCode and direct clients"
    },
    "http": {
      "enabled": false,
      "port": 8080,
      "host": "localhost",
      "cors_enabled": true,
      "description": "HTTP REST API for remote MCP clients"
    },
    "websocket": {
      "enabled": false,
      "port": 8081,
      "host": "localhost",
      "description": "WebSocket interface for real-time web clients"
    },
    "auto_restart": {
      "stdio": false,
      "http": true,
      "websocket": true
    },
    "tool_filtering": {
      "local_only_tools": [
        "read_file", "write_file", "create_file", "delete_file",
        "list_directory", "search_files", "move_file", "get_file_info",
        "vscode_*", "run_in_terminal", "get_terminal_output"
      ],
      "always_safe_tools": [
        "register_agent", "create_task", "get_task_board",
        "heartbeat", "create_entities", "sequentialthinking"
      ]
    }
  },
  "servers": {
    "mcp_filesystem": {
      "type": "stdio",
      "command": "bunx",
      "args": ["-y", "@modelcontextprotocol/server-filesystem", "/home/ra"],
      "auto_restart": true,
      "description": "Filesystem operations server with heartbeat coverage",
      "local_only": true
    },
    "mcp_memory": {
      "type": "stdio", 
      "command": "bunx",
      "args": ["-y", "@modelcontextprotocol/server-memory"],
      "auto_restart": true,
      "description": "Memory and knowledge graph server",
      "local_only": false
    },
    "mcp_sequentialthinking": {
      "type": "stdio",
      "command": "bunx", 
      "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"],
      "auto_restart": true,
      "description": "Sequential thinking and reasoning server",
      "local_only": false
    },
    "mcp_context7": {
      "type": "stdio",
      "command": "bunx",
      "args": ["-y", "@upstash/context7-mcp"],
      "auto_restart": true,
      "description": "Context7 library documentation server",
      "local_only": false
    }
  },
  "examples": {
    "stdio_mode": {
      "description": "Traditional MCP over stdio for local clients",
      "command": "./scripts/mcp_launcher_multi.sh stdio",
      "use_case": "VSCode MCP integration, local development"
    },
    "http_mode": {
      "description": "HTTP REST API for remote clients", 
      "command": "./scripts/mcp_launcher_multi.sh http 8080",
      "use_case": "Remote API access, web applications, CI/CD"
    },
    "websocket_mode": {
      "description": "WebSocket for real-time web clients",
      "command": "./scripts/mcp_launcher_multi.sh websocket 8081", 
      "use_case": "Real-time web dashboards, live collaboration"
    },
    "remote_mode": {
      "description": "Both HTTP and WebSocket on same port",
      "command": "./scripts/mcp_launcher_multi.sh remote 8080",
      "use_case": "Complete remote access with both REST and real-time"
    },
    "all_mode": {
      "description": "All interface modes simultaneously",
      "command": "./scripts/mcp_launcher_multi.sh all 8080",
      "use_case": "Development, testing, maximum compatibility"
    }
  }
}